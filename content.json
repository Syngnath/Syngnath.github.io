{"meta":{"title":"Syngnath","subtitle":null,"description":null,"author":"Syngnath","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"第一个Github Pages博客部署心理历程","slug":"第一个Github Pages博客部署心理历程","date":"2019-05-22T10:26:00.000Z","updated":"2019-05-22T10:59:58.900Z","comments":false,"path":"2019/05/22/第一个Github Pages博客部署心理历程/","link":"","permalink":"http://yoursite.com/2019/05/22/第一个Github Pages博客部署心理历程/","excerpt":"","text":"简介欢迎来到我的github博客，这个博客会被我用于记录一些学习笔记，将来可能会发布一些总结性的东西。 博客简历心路历程这个博客弄了我两天，终于弄完了，这是第一个笔记，主要是不太熟悉一些命令操作踩坑了，并且实现自动化部署花了些时间。 找了好多主题不太满意，最后决定用这个主题是因为说明文档比较详细，但是直接copy进去是用不了的…所以又看了好多文章才实现。 现在我在本地有两个工作区，第一个是自己随笔写的自己看的，比较多东西，第二个是发布出去到博客上的上的，是需要花时间整理发布的。为了之后好说明，将前者设为A工作区，后者设为B工作区 A工作区方案:Onedrive + VSCode + gitlabOnedrive大家应该有用过，就是一个非常方便的同步工具，设置好文件夹好东西扔进去就能自动同步，而且不会怕锁定文件一切自动化不用理 VsCode主要是用于码字和git推送，需要装一些插件才能更好支持git和markdown，这里不再阐述 gitlab用于git托管，并且支持私有仓库，让你的隐私不被别人看到，国内的码云也可以 好了，现在资料本地一份，Onedrive云盘一份，gitlab一份，三重备份，还能随时回溯，nothing is better! B工作区方案: VScode + hexo + travis cl简单说下，创建一个git工作区后，安装hexo，它会生成静态网页，这样我们可以本地预览或者推送到GitHUb或者码云等Git托管网站，它们有个Github pages的功能可以显示出该静态网页，从而实现Blog的功能。但是有人可能会问travis cl是个什么东西？ 你想一下，每次本地码完字后，都要去工作区12hexo clean &amp;&amp; hexo ghexo d 是不是感觉太麻烦，我只想安安静静写个文章而已。所以travis cl可以帮你解决这个问题，它会监控你的分支，当你push东西上去后，会自动帮你deploy一个静态网页，这样你就不用每次都输入命令了。 好了你现在要做的就是在vscode里面写好文章，确定没问题后就在vscode里push上去，ok！搞定 踩坑坑1：hexo部署后的文件覆盖掉原来在master上的源文件解决：把源文件整个文件夹Push到master后，创建分支hexo,然后把hexo设为默认分支，然后本地部署时，它自动推送的依然是master分支,这这样就不会影响到hexo的源文件 坑2：npm install 没反应，啥提示都没，导致下一步无法进行下去解决：npm版本太低，去下载新版本的nodejs，一些博客推荐的版本都是上古版本 坑3: travis cl 部署失败，查看日志发现 rakefiles not found解决：不要用主题包自带的.travis.yml文件，它会跳转到_travis.sh里面执行一大堆没什么卵用又会不知道哪里出错的命令，去网上一些博客网址抄一个顺眼的下来就行。接下来下面提供一个顺眼的自用的，理论上只有这一个文件就够了123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051language: node_jsnode_js: stablesudo: false#cachecache: directories: - &quot;node_modules&quot;notifications: # 邮件发送部署结果通知 email: recipients: - XXX@163.com on_success: never on_failure: always# S: Build Lifecycleinstall: - npm install# - gem install travis# - travis login --pro --github-token $&#123;GH_TOKEN&#125;before_script: - export TZ=&apos;Asia/Shanghai&apos; - npm install -g gulp - chmod +x _travis.shscript: - hexo clean &amp;&amp; hexo g after_script: - cd ./public - git init - git config user.name &quot;用户名&quot; - git config user.email &quot;邮箱&quot; - git add . - git commit -m &quot;Update docs&quot; - git push --force --quiet &quot;https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;&quot; master:masterafter_success: # - LAST_BUILD_NUMBER=68 # - for i in $(seq 1 $LAST_BUILD_NUMBER ); do travis logs $i --delete --force ; donebranches: only: - hexoenv: global: - GH_REF: github.com/用户名/用户名.github.io.git 注意GH_TOKEN，和GH_REF是你要在travis.cl网站里面对应工程setting里添加环境变量，它读取时就会自动替换，这样好处是防止泄露重要资料 好了，希望你接下来和我一样搭建出好的Blog，下面提供一些参考博客最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析Travis Cl参考 博客内容会记录一些关于C家族笔记和Unity相关东西，AI算法等，主要和游戏相关。Study for developing our country","categories":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/categories/博客/"}],"tags":[{"name":"Travis Cl","slug":"Travis-Cl","permalink":"http://yoursite.com/tags/Travis-Cl/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"VsCode","slug":"VsCode","permalink":"http://yoursite.com/tags/VsCode/"}],"keywords":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/categories/博客/"}]}]}